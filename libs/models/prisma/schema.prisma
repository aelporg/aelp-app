// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../../../node_modules/.generated/graphql"
}

model User {
  id             String             @id @default(uuid())
  firstName      String
  lastName       String
  userName       String             @unique
  email          String
  /// @TypeGraphQL.omit(output: true)
  password       String
  country        Country            @relation(fields: [countryId], references: [id], name: "user_country")
  countryId      String
  refreshTokens  UserRefreshToken[] @relation(name: "user_refreshTokens")
  role           Role               @default(USER)
  updatedAt      DateTime           @updatedAt
  createdAt      DateTime           @default(now())
  linkedAccounts LinkedAccount[]    @relation("user_linkedAccounts")
}

enum Role {
  ADMIN
  USER
}

model UserRefreshToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], name: "user_refreshTokens")
  userId    String
  token     String   @unique
  invalid   Boolean  @default(false)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model LinkedAccount {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id], name: "user_linkedAccounts")
  userId     String
  provider   Provider @relation("provider_linkedAccounts", fields: [providerId], references: [id])
  providerId String
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
}

model Provider {
  id             String          @id @default(uuid())
  name           String          @unique
  linkedAccounts LinkedAccount[] @relation(name: "provider_linkedAccounts")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Country {
  id           String   @id @default(uuid())
  countryName  String   @unique
  countryCode  String   @unique
  flagImageUrl String
  users        User[]   @relation("user_country")
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())
}
